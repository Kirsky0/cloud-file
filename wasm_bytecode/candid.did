type WasmBytecode = record {
    module_name: text;
    bytecode: text;
    version: nat32;
    remark: text;
    upload_time: nat64;
};

type CanisterStatus = record {
    status: Status;
    settings: DefiniteCanisterSettings;
    module_hash: opt vec nat8;
    memory_size: nat;
    cycles: nat;
    idle_cycles_burned_per_day: nat;
};

type Status = variant {
    running;
    stopping;
    stopped;
};

type DefiniteCanisterSettings = record {
    controllers: vec principal;
    compute_allocation: nat;
    memory_allocation: nat;
    freezing_threshold: nat;
};

service : {
    "add_wasm_bytecode": (text, text, text, nat64) -> ();
    "list": () ->(vec WasmBytecode) query;
    "status": ()->(CanisterStatus);
}
